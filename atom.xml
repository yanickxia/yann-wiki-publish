<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yanick&#39;s Wiki</title>
  
  <subtitle>30岁の魔法师营地</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wiki.yanick.site/"/>
  <updated>2022-03-29T08:40:16.574Z</updated>
  <id>http://wiki.yanick.site/</id>
  
  <author>
    <name>yanick</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu 必装软件</title>
    <link href="http://wiki.yanick.site/wiki/tools/linux/ubuntu/"/>
    <id>http://wiki.yanick.site/wiki/tools/linux/ubuntu/</id>
    <published>2022-03-29T15:10:08.000Z</published>
    <updated>2022-03-29T08:40:16.574Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AppImageLauncher"><a href="#AppImageLauncher" class="headerlink" title="AppImageLauncher"></a>AppImageLauncher</h2><p>是否厌恶死了， appimage 程序没有启动 icon 了，试试 <a href="https://github.com/TheAssassin/AppImageLauncher" rel="external nofollow noopener noreferrer" target="_blank">AppImageLauncher</a> 真香。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;AppImageLauncher&quot;&gt;&lt;a href=&quot;#AppImageLauncher&quot; class=&quot;headerlink&quot; title=&quot;AppImageLauncher&quot;&gt;&lt;/a&gt;AppImageLauncher&lt;/h2&gt;&lt;p&gt;是否厌恶死了， appima
      
    
    </summary>
    
      <category term="ubuntu" scheme="http://wiki.yanick.site/categories/ubuntu/"/>
    
      <category term="tools" scheme="http://wiki.yanick.site/categories/ubuntu/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>ZSH 自用安装手册</title>
    <link href="http://wiki.yanick.site/wiki/tools/zsh/zsh/"/>
    <id>http://wiki.yanick.site/wiki/tools/zsh/zsh/</id>
    <published>2022-03-25T13:00:50.000Z</published>
    <updated>2022-03-29T08:40:16.574Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ZSH-安装"><a href="#ZSH-安装" class="headerlink" title="ZSH 安装"></a>ZSH 安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install -y git zsh</span><br><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><h1 id="ZSH-插件"><a href="#ZSH-插件" class="headerlink" title="ZSH 插件"></a>ZSH 插件</h1><h2 id="zsh-autosuggestions"><a href="#zsh-autosuggestions" class="headerlink" title="zsh-autosuggestions"></a>zsh-autosuggestions</h2><p><a href="https://github.com/zsh-users/zsh-autosuggestions" rel="external nofollow noopener noreferrer" target="_blank">github link</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>~/.zshrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plugins=( </span><br><span class="line">    <span class="comment"># other plugins...</span></span><br><span class="line">    zsh-autosuggestions</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>推荐配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=&quot;fg=#3f3f3f,bg=#8c8c8c,bold&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ZSH-安装&quot;&gt;&lt;a href=&quot;#ZSH-安装&quot; class=&quot;headerlink&quot; title=&quot;ZSH 安装&quot;&gt;&lt;/a&gt;ZSH 安装&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
      
    
    </summary>
    
      <category term="tools" scheme="http://wiki.yanick.site/categories/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>SRE 工具箱</title>
    <link href="http://wiki.yanick.site/wiki/tools/sre/"/>
    <id>http://wiki.yanick.site/wiki/tools/sre/</id>
    <published>2022-01-30T16:27:50.000Z</published>
    <updated>2022-02-02T01:40:17.060Z</updated>
    
    <content type="html"><![CDATA[<h1 id="guacamole"><a href="#guacamole" class="headerlink" title="guacamole"></a>guacamole</h1><blockquote><p>a client-less remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH over HTML5.</p></blockquote><p><a href="https://github.com/MaxWaldorf/guacamole" rel="external nofollow noopener noreferrer" target="_blank">github</a> ：临时使用版本，包含了数据，如果使用在 PRD 推荐使用官方的 IMAGE</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">  -p 8080:8080 \</span><br><span class="line">  -v &lt;/path/to/config&gt;:/config \</span><br><span class="line">  maxwaldorf/guacamole</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;guacamole&quot;&gt;&lt;a href=&quot;#guacamole&quot; class=&quot;headerlink&quot; title=&quot;guacamole&quot;&gt;&lt;/a&gt;guacamole&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;a client-less remote desktop 
      
    
    </summary>
    
      <category term="tools" scheme="http://wiki.yanick.site/categories/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>使用侧边键控制网易云音乐</title>
    <link href="http://wiki.yanick.site/wiki/linux/tips/netese-cloud/"/>
    <id>http://wiki.yanick.site/wiki/linux/tips/netese-cloud/</id>
    <published>2021-11-21T16:09:25.000Z</published>
    <updated>2021-11-21T06:20:17.077Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xbindkeys xautomation</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成默认配置</span></span><br><span class="line">xbindkeys --defaults &gt; <span class="variable">$HOME</span>/.xbindkeysrc</span><br></pre></td></tr></table></figure><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><figure class="highlight plain"><figcaption><span>.xbindkeysrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#KeyboardPre</span><br><span class="line">&quot;dbus-send --print-reply --dest=org.mpris.MediaPlayer2.netease-cloud-music  /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous&quot;</span><br><span class="line">  b:9 + Release</span><br><span class="line">#KeyboardNext</span><br><span class="line">&quot;dbus-send --print-reply --dest=org.mpris.MediaPlayer2.netease-cloud-music  /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next&quot;</span><br><span class="line">  b:8 + Release</span><br></pre></td></tr></table></figure><h2 id="查看按键编号"><a href="#查看按键编号" class="headerlink" title="查看按键编号"></a>查看按键编号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xev | grep button</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="linux" scheme="http://wiki.yanick.site/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>修复系统</title>
    <link href="http://wiki.yanick.site/wiki/linux/tips/repair/"/>
    <id>http://wiki.yanick.site/wiki/linux/tips/repair/</id>
    <published>2021-11-20T16:09:25.000Z</published>
    <updated>2021-11-20T11:29:02.246Z</updated>
    
    <content type="html"><![CDATA[<p>今天遇见2个问题，第一个突然显卡驱动不能安装。</p><h2 id="修复-Nv-驱动无法安装的问题"><a href="#修复-Nv-驱动无法安装的问题" class="headerlink" title="修复 Nv 驱动无法安装的问题"></a>修复 Nv 驱动无法安装的问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LC_MESSAGES=C dpkg-divert --list <span class="string">'*nvidia-340*'</span> | sed -nre <span class="string">'s/^diversion of (.*) to .*/\1/p'</span> | xargs -rd<span class="string">'\n'</span> -n1 -- sudo dpkg-divert --remove\nsudo apt --fix-broken install</span><br></pre></td></tr></table></figure><h2 id="修-usr-lib-x86-64-linux-gnu-缺失"><a href="#修-usr-lib-x86-64-linux-gnu-缺失" class="headerlink" title="修 /usr/lib/x86_64-linux-gnu/ 缺失"></a>修 /usr/lib/x86_64-linux-gnu/ 缺失</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install --reinstall `dpkg -S /usr/lib/x86_64-linux-gnu/ \\n| sed <span class="string">'s/,/ /g'</span> | head -c-28`</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天遇见2个问题，第一个突然显卡驱动不能安装。&lt;/p&gt;
&lt;h2 id=&quot;修复-Nv-驱动无法安装的问题&quot;&gt;&lt;a href=&quot;#修复-Nv-驱动无法安装的问题&quot; class=&quot;headerlink&quot; title=&quot;修复 Nv 驱动无法安装的问题&quot;&gt;&lt;/a&gt;修复 Nv 驱动无法
      
    
    </summary>
    
      <category term="linux" scheme="http://wiki.yanick.site/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Istio 快速构建</title>
    <link href="http://wiki.yanick.site/wiki/istio/istio-build/"/>
    <id>http://wiki.yanick.site/wiki/istio/istio-build/</id>
    <published>2021-11-08T17:28:41.000Z</published>
    <updated>2021-11-12T10:40:17.083Z</updated>
    
    <content type="html"><![CDATA[<h2 id="build-Envoy-By-docker"><a href="#build-Envoy-By-docker" class="headerlink" title="build Envoy By docker"></a>build Envoy By docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/go/src/istio.io/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/istio/proxy.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> proxy</span><br><span class="line">docker run -it -w /work -v <span class="variable">$PWD</span>:/work gcr.io/istio-testing/build-tools-proxy:master-latest bash</span><br><span class="line">make</span><br></pre></td></tr></table></figure><h2 id="build-release"><a href="#build-release" class="headerlink" title="build release"></a>build release</h2><p>参考 <a href="https://github.com/istio/release-builder/blob/master/release/README.md" rel="external nofollow noopener noreferrer" target="_blank">istio-release-builder</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://github.com/istio/istio/issues/28476" rel="external nofollow noopener noreferrer" target="_blank">istio issue</a></li><li><a href="https://github.com/istio/tools" rel="external nofollow noopener noreferrer" target="_blank">istio tools</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;build-Envoy-By-docker&quot;&gt;&lt;a href=&quot;#build-Envoy-By-docker&quot; class=&quot;headerlink&quot; title=&quot;build Envoy By docker&quot;&gt;&lt;/a&gt;build Envoy By docker&lt;/
      
    
    </summary>
    
      <category term="isito" scheme="http://wiki.yanick.site/categories/isito/"/>
    
    
      <category term="isito" scheme="http://wiki.yanick.site/tags/isito/"/>
    
  </entry>
  
  <entry>
    <title>自建 Confluence Quick Start</title>
    <link href="http://wiki.yanick.site/wiki/selfhosted/confluence/"/>
    <id>http://wiki.yanick.site/wiki/selfhosted/confluence/</id>
    <published>2021-10-21T14:05:25.000Z</published>
    <updated>2021-10-21T06:55:16.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker-化-Confluence"><a href="#Docker-化-Confluence" class="headerlink" title="Docker 化 Confluence"></a>Docker 化 Confluence</h2><figure class="highlight plain"><figcaption><span>Dockerfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM atlassian/confluence-server:7.13</span><br><span class="line"># 使用 Mysql，PG 默认不需要</span><br><span class="line">ADD mysql-connector-java-8.0.19.jar /opt/atlassian/confluence/lib/ </span><br><span class="line">ADD atlassian-agent-v1.3.1/atlassian-agent.jar /opt/atlassian/atlassian-agent.jar</span><br></pre></td></tr></table></figure><p><code>atlassian-agent</code> <a href="https://gitee.com/pengzhile/atlassian-agent" rel="external nofollow noopener noreferrer" target="_blank">点此获取</a></p><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><figure class="highlight yaml"><figcaption><span>docker-compose.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">confluence:</span></span><br><span class="line"><span class="attr">    build:</span> <span class="string">.</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">confluence</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">    JAVA_OPTS:</span> <span class="attr">-javaagent:/opt/atlassian/atlassian-agent.jar</span>  <span class="comment"># 挂入破解插件</span></span><br><span class="line"><span class="attr">    JVM_MAXIMUM_MEMORY:</span> <span class="number">4096</span><span class="string">m</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">/mnt/confluence/data/:/var/atlassian/application-data/confluence/</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"8090:8090"</span></span><br><span class="line"><span class="attr">    logging:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">"json-file"</span></span><br><span class="line"><span class="attr">    options:</span></span><br><span class="line"><span class="attr">        max-size:</span> <span class="number">50</span><span class="string">m</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><h2 id="破解安装Key"><a href="#破解安装Key" class="headerlink" title="破解安装Key"></a>破解安装Key</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a -jar /opt/atlassian/atlassian-agent.jar  -p conf -m &lt;YOUR-MAIL&gt; -o &lt;YOUR-ORG&gt; -d -s &lt;YOUR-SEVICE-KEY&gt;</span><br></pre></td></tr></table></figure><p>推荐使用 <code>-d</code> 开启 DataCenter 版本，因为 Server 到 2024 年之后就不能用了。</p><h2 id="破解软体"><a href="#破解软体" class="headerlink" title="破解软体"></a>破解软体</h2><p>和上面差不多，只是把 -p 的参数改一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar /opt/atlassian/atlassian-agent.jar  -p com.mute.confluence.plugins.xTables -m &lt;YOUR-MAIL&gt; -o &lt;YOUR-ORG&gt; -d -s &lt;YOUR-SEVICE-KEY&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Docker-化-Confluence&quot;&gt;&lt;a href=&quot;#Docker-化-Confluence&quot; class=&quot;headerlink&quot; title=&quot;Docker 化 Confluence&quot;&gt;&lt;/a&gt;Docker 化 Confluence&lt;/h2&gt;&lt;figu
      
    
    </summary>
    
      <category term="selfhosted" scheme="http://wiki.yanick.site/categories/selfhosted/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 强制重启</title>
    <link href="http://wiki.yanick.site/wiki/linux/linux-force-reboot/"/>
    <id>http://wiki.yanick.site/wiki/linux/linux-force-reboot/</id>
    <published>2021-10-17T22:09:25.000Z</published>
    <updated>2021-10-21T06:55:16.548Z</updated>
    
    <content type="html"><![CDATA[<p>当系统无法使用 <code>shutdown</code> <code>reboot</code> 无法使用的是清空下，我们需要使用另外一种方式进行重启。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/kernel/sysrq  </span><br><span class="line"><span class="built_in">echo</span> b &gt; /proc/sysrq-trigger</span><br></pre></td></tr></table></figure><p>1./proc/sys/kernel/sysrq<br>向 sysrq 文件中写入1是为了开启 SysRq 功能。根据 linux/Documentations/sysrq.txt 中所说：SysRq 代表的是 Magic System Request Key。开启了这个功能以后，只要内核没有挂掉，它就会响应你要求的任何操作。但是这需要内核支持(CONFIG_MAGIC_SYSRQ 选项)。向 /proc/sys/kernel/sysrq 中写入0是关闭 SysRq 功能，写入1是开启，其他选项请参考 sysrq.txt。</p><p>2./proc/sysrq-trigger<br>立即重新启动计算机:<br>echo “b” &gt; /proc/sysrq-trigger</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://developer.aliyun.com/article/520273" rel="external nofollow noopener noreferrer" target="_blank">Linux强制重启</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当系统无法使用 &lt;code&gt;shutdown&lt;/code&gt; &lt;code&gt;reboot&lt;/code&gt; 无法使用的是清空下，我们需要使用另外一种方式进行重启。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="linux" scheme="http://wiki.yanick.site/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>NC 使用指南</title>
    <link href="http://wiki.yanick.site/wiki/linux/nc/"/>
    <id>http://wiki.yanick.site/wiki/linux/nc/</id>
    <published>2021-06-09T13:09:25.000Z</published>
    <updated>2021-10-21T06:55:16.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h2><p>目标服务器</p><p>nc -q0 -lp <port> | tar xvf -</port></p><p>文件所在服务器</p><p>tar cvf - dir | nc -q0 <ip> <port></port></ip></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;传输文件&quot;&gt;&lt;a href=&quot;#传输文件&quot; class=&quot;headerlink&quot; title=&quot;传输文件&quot;&gt;&lt;/a&gt;传输文件&lt;/h2&gt;&lt;p&gt;目标服务器&lt;/p&gt;
&lt;p&gt;nc -q0 -lp &lt;port&gt; | tar xvf -&lt;/port&gt;&lt;/p&gt;
&lt;p&gt;文件所在服
      
    
    </summary>
    
      <category term="linux" scheme="http://wiki.yanick.site/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>监听并打印接收到的数据</title>
    <link href="http://wiki.yanick.site/wiki/linux/network/listen-and-print/"/>
    <id>http://wiki.yanick.site/wiki/linux/network/listen-and-print/</id>
    <published>2021-05-28T10:30:25.000Z</published>
    <updated>2021-10-21T06:55:16.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Socat-推荐"><a href="#Socat-推荐" class="headerlink" title="Socat [推荐]"></a>Socat [推荐]</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socat -x - TCP-LISTEN:12345,fork,reuseaddr</span><br></pre></td></tr></table></figure><p>-x: 打印 HEX </p><h2 id="Ncat"><a href="#Ncat" class="headerlink" title="Ncat"></a>Ncat</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ncat -lk -C --hex-dump ssh-hex.log 12345</span><br></pre></td></tr></table></figure><p>-C: Hex Dump</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Socat-推荐&quot;&gt;&lt;a href=&quot;#Socat-推荐&quot; class=&quot;headerlink&quot; title=&quot;Socat [推荐]&quot;&gt;&lt;/a&gt;Socat [推荐]&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="linux" scheme="http://wiki.yanick.site/categories/linux/"/>
    
      <category term="network" scheme="http://wiki.yanick.site/categories/linux/network/"/>
    
    
  </entry>
  
  <entry>
    <title>kubernetes network troubleshooting</title>
    <link href="http://wiki.yanick.site/wiki/k8s/network-troubleshooting/"/>
    <id>http://wiki.yanick.site/wiki/k8s/network-troubleshooting/</id>
    <published>2021-04-16T16:27:50.000Z</published>
    <updated>2021-10-21T06:55:16.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="API-无法访问其他服务"><a href="#API-无法访问其他服务" class="headerlink" title="API 无法访问其他服务"></a>API 无法访问其他服务</h2><p>最近安装了一个 <code>kube</code> 但是 <code>api server</code>，但是无法访问 <code>mertics server</code> 等组件，经排查</p><ul><li><p><code>api server</code> 运行在 <code>master</code> 节点上</p></li><li><p><code>其他</code> 组件运行在 <code>worker</code> 节点上<br>核心原因是因为 <code>flannel</code> 打开了 <code>DirectRouting</code> 选项，导致了将宿主机网卡作为 <code>host-gw</code> 直接将 二层 数据包转发出去，并没有进行封装，在云上的网络（火山引擎）禁止此转发行为，表现为</p></li><li><p><code>api server</code> 访问其他服务都是 <code>timeout</code></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;API-无法访问其他服务&quot;&gt;&lt;a href=&quot;#API-无法访问其他服务&quot; class=&quot;headerlink&quot; title=&quot;API 无法访问其他服务&quot;&gt;&lt;/a&gt;API 无法访问其他服务&lt;/h2&gt;&lt;p&gt;最近安装了一个 &lt;code&gt;kube&lt;/code&gt; 但是 &lt;
      
    
    </summary>
    
      <category term="network" scheme="http://wiki.yanick.site/categories/network/"/>
    
      <category term="kubernetes" scheme="http://wiki.yanick.site/categories/network/kubernetes/"/>
    
    
  </entry>
  
  <entry>
    <title>Seal VPN Not Working in ubuntu 18+</title>
    <link href="http://wiki.yanick.site/wiki/tips/dns/"/>
    <id>http://wiki.yanick.site/wiki/tips/dns/</id>
    <published>2021-03-24T16:24:41.000Z</published>
    <updated>2021-10-21T06:55:16.548Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Ubuntu18以上无法访问网络的解决办法</span><br><span class="line">Ubuntu 18.04 以后，系统预设安装 systemd-resolved，劫持了 /etc/resolve.conf</span><br><span class="line">用 symbolic link 指向 /run/systemd/resolve/stub-resolv.conf</span><br><span class="line">NetworkManager 发现 /etc/resolv.conf 为 symbolic-link, 会忽略我们使用 dnsmasq 的要求。</span><br><span class="line">解法:</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> systemd-resolved</span><br><span class="line">sudo rm -f /etc/resolv.conf <span class="comment"># manually delete the /etc/resolv.conf</span></span><br><span class="line">sudo systemctl reload NetworkManager <span class="comment"># NM will regenerate /etc/resolv.conf</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="tips" scheme="http://wiki.yanick.site/categories/tips/"/>
    
    
  </entry>
  
  <entry>
    <title>计算机缩写之 Call/CC</title>
    <link href="http://wiki.yanick.site/wiki/cs/call/cc/"/>
    <id>http://wiki.yanick.site/wiki/cs/call/cc/</id>
    <published>2021-03-23T17:28:41.000Z</published>
    <updated>2021-10-21T06:55:16.544Z</updated>
    
    <content type="html"><![CDATA[<p><code>call/cc</code> 即 <code>call with current continuation</code>，完整的定义是 </p><blockquote><p>captures the current continuation, and applies its argument to this continuation </p></blockquote><p><code>continuation</code> 就是程序剩下的部分，举个例子，对于表达式 <code>(+ 4 (+ 1 2))</code> 来说，(+ 1 2) 这个的剩下来就是如下</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">lambda</span> (<span class="name">v</span>) (<span class="name">+</span> <span class="number">4</span> v))</span><br></pre></td></tr></table></figure><p>对于 4 来说，剩下来就是 </p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">lambda</span> (<span class="name">v</span>) (<span class="name">+</span> v (<span class="name">+</span> <span class="number">1</span> <span class="number">2</span>)))</span><br></pre></td></tr></table></figure><p>那这个 <code>call/cc</code> 的定义是</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(... (<span class="name">call/cc</span> (<span class="name">lambda</span> (<span class="name">cc</span>) </span><br><span class="line">                      (<span class="name">&lt;body&gt;</span>))) ...)</span><br></pre></td></tr></table></figure><p><code>body</code> 是指当前 <code>continuation</code>， <code>cc</code> 就是某个函数。</p><hr><p>回到抽象定义来 <code>(call/cc f)</code> ，接受一个 <code>f</code> 而这个 <code>f</code> 的实参是 <code>continuation</code><br>比如说 <code>((call/cc f) e2)</code> 对于 <code>f</code> 接受是 <code>continuation</code>，假设当前的 <code>continuation</code> 是一个 <code>c</code><br>那么<code>current continuation</code> 为 <code>(lambda (c) (c e2))</code> 这个对于 <code>e2</code> 来说的，加上 f 就会变成 <code>(f (lambda (c) (c e2)))</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;call/cc&lt;/code&gt; 即 &lt;code&gt;call with current continuation&lt;/code&gt;，完整的定义是 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;captures the current continuation, and app
      
    
    </summary>
    
      <category term="cs" scheme="http://wiki.yanick.site/categories/cs/"/>
    
      <category term="call/cc" scheme="http://wiki.yanick.site/categories/cs/call-cc/"/>
    
    
      <category term="cs" scheme="http://wiki.yanick.site/tags/cs/"/>
    
      <category term="call/cc" scheme="http://wiki.yanick.site/tags/call-cc/"/>
    
  </entry>
  
  <entry>
    <title>Rust常见问题</title>
    <link href="http://wiki.yanick.site/wiki/rust/rust/"/>
    <id>http://wiki.yanick.site/wiki/rust/rust/</id>
    <published>2021-03-22T16:09:25.000Z</published>
    <updated>2021-10-21T06:55:16.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Failed-to-authenticate-when-downloading-repository"><a href="#Failed-to-authenticate-when-downloading-repository" class="headerlink" title="Failed to authenticate when downloading repository"></a>Failed to authenticate when downloading repository</h2><p><a href="https://github.com/rust-lang/cargo/issues/3381" rel="external nofollow noopener noreferrer" target="_blank">git issue</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span> `ssh-agent -s`</span><br><span class="line">ssh-add</span><br><span class="line">cargo ...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Failed-to-authenticate-when-downloading-repository&quot;&gt;&lt;a href=&quot;#Failed-to-authenticate-when-downloading-repository&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="rust" scheme="http://wiki.yanick.site/categories/rust/"/>
    
    
  </entry>
  
  <entry>
    <title>构建与调试 Linux 内核</title>
    <link href="http://wiki.yanick.site/wiki/linux/build-and-debug-kernel-simple/"/>
    <id>http://wiki.yanick.site/wiki/linux/build-and-debug-kernel-simple/</id>
    <published>2021-03-19T16:09:25.000Z</published>
    <updated>2021-10-21T06:55:16.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-Kenrel"><a href="#Linux-Kenrel" class="headerlink" title="Linux Kenrel"></a>Linux Kenrel</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.ustc.edu.cn/kernel.org/linux/kernel/v4.x/linux-4.19.171.tar.gz</span><br><span class="line">tar -xvf linux-4.19.171.tar.gz</span><br></pre></td></tr></table></figure><h2 id="Install-Build"><a href="#Install-Build" class="headerlink" title="Install Build"></a>Install Build</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y libncurses5-dev libssl-dev bison flex libelf-dev gcc make openssl libc6-dev bc</span><br></pre></td></tr></table></figure><h2 id="CP-Old-Config"><a href="#CP-Old-Config" class="headerlink" title="CP Old Config"></a>CP Old Config</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp /boot/config-4.19.0-14-amd64 .config</span><br><span class="line">make oldconfig</span><br><span class="line"><span class="comment"># for debian</span></span><br><span class="line">sed -ri <span class="string">'/CONFIG_SYSTEM_TRUSTED_KEYS/s/=.+/=""/g'</span> .config</span><br></pre></td></tr></table></figure><h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">make -j8</span><br><span class="line">make bzImage</span><br><span class="line">make modules</span><br><span class="line">make modules_install</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="disable-kaslr"><a href="#disable-kaslr" class="headerlink" title="disable kaslr"></a>disable kaslr</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/default/grub</span><br><span class="line"><span class="comment"># append nokaslr</span></span><br><span class="line">update-grub</span><br></pre></td></tr></table></figure><h2 id="gdb-stub"><a href="#gdb-stub" class="headerlink" title="gdb stub"></a>gdb stub</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim xxx.vmx</span><br><span class="line">debugStub.listen.guest64.remote = <span class="string">"TRUE"</span></span><br><span class="line">debugStub.listen.guest64 = <span class="string">"TRUE"</span></span><br><span class="line">monitor.debugOnStartGuest64 = <span class="string">"TRUE"</span></span><br></pre></td></tr></table></figure><h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><pre><code class="bash"></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux-Kenrel&quot;&gt;&lt;a href=&quot;#Linux-Kenrel&quot; class=&quot;headerlink&quot; title=&quot;Linux Kenrel&quot;&gt;&lt;/a&gt;Linux Kenrel&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;t
      
    
    </summary>
    
      <category term="linux" scheme="http://wiki.yanick.site/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>SSL 证书查看</title>
    <link href="http://wiki.yanick.site/wiki/linux/rsa/"/>
    <id>http://wiki.yanick.site/wiki/linux/rsa/</id>
    <published>2021-03-12T16:09:25.000Z</published>
    <updated>2021-10-21T06:55:16.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看服务器-SSL-证书详情"><a href="#查看服务器-SSL-证书详情" class="headerlink" title="查看服务器 SSL 证书详情"></a>查看服务器 SSL 证书详情</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> | openssl s_client -showcerts -servername &lt;SERVER_NAME&gt; -connect &lt;ADDRESS&gt; 2&gt;/dev/null | openssl x509 -inform pem -noout -text</span><br></pre></td></tr></table></figure><h2 id="查询证书"><a href="#查询证书" class="headerlink" title="查询证书"></a>查询证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -<span class="keyword">in</span> &lt;INPUT.pem&gt; -noout -text</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;查看服务器-SSL-证书详情&quot;&gt;&lt;a href=&quot;#查看服务器-SSL-证书详情&quot; class=&quot;headerlink&quot; title=&quot;查看服务器 SSL 证书详情&quot;&gt;&lt;/a&gt;查看服务器 SSL 证书详情&lt;/h2&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="linux" scheme="http://wiki.yanick.site/categories/linux/"/>
    
      <category term="ssl" scheme="http://wiki.yanick.site/categories/linux/ssl/"/>
    
    
  </entry>
  
  <entry>
    <title>Build &amp; Debug Envoy</title>
    <link href="http://wiki.yanick.site/wiki/envoy/build-debug-envoy/"/>
    <id>http://wiki.yanick.site/wiki/envoy/build-debug-envoy/</id>
    <published>2021-03-09T16:09:25.000Z</published>
    <updated>2021-10-21T06:55:16.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Debug-Compiler"><a href="#Debug-Compiler" class="headerlink" title="Debug Compiler"></a>Debug Compiler</h2><p>首先构建一个可debug的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bazel build -c dbg --spawn_strategy=standalone //<span class="built_in">source</span>/exe:envoy-static</span><br></pre></td></tr></table></figure><h2 id="生成-dSYM"><a href="#生成-dSYM" class="headerlink" title="生成 dSYM"></a>生成 dSYM</h2><p>进入到 envoy-static 同级目录，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dsymutil envoy-static -o envoy-static.dSYM</span><br></pre></td></tr></table></figure><h2 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h2><h3 id="Debug-By-LLDB"><a href="#Debug-By-LLDB" class="headerlink" title="Debug By LLDB"></a>Debug By LLDB</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ lldb envoy-static</span><br><span class="line">(lldb) process launch --stop-at-entry -- -c <span class="variable">$PATH_TO_CONFIG</span></span><br><span class="line">(lldb) add-dsym envoy-static.dSYM</span><br><span class="line">(lldb) breakpoint <span class="built_in">set</span> --file server.cc --line 147</span><br><span class="line">(lldb) <span class="built_in">continue</span></span><br></pre></td></tr></table></figure><h3 id="Debug-By-Vscode"><a href="#Debug-By-Vscode" class="headerlink" title="Debug By Vscode"></a>Debug By Vscode</h3><p>open launch.json file and change program to “${workspaceFolder}/bazel-bin/envoy” (lauch.json will open when to start debugging)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // Use IntelliSense to learn about possible attributes.</span><br><span class="line">    // Hover to view descriptions of existing attributes.</span><br><span class="line">    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    "version": "0.2.0",</span><br><span class="line">    "configurations": [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"(lldb) Launch"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"cppdbg"</span>,</span><br><span class="line">            <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="attr">"program"</span>: <span class="string">"$&#123;workspaceFolder&#125;/bazel-bin/source/exe/envoy-static"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [<span class="string">"-c"</span>, <span class="string">"envoy.yaml"</span>],</span><br><span class="line">            <span class="attr">"stopAtEntry"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceFolder&#125;"</span>,</span><br><span class="line">            <span class="attr">"environment"</span>: [],</span><br><span class="line">            <span class="attr">"externalConsole"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"MIMode"</span>: <span class="string">"lldb"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Debug-in-Clion"><a href="#Debug-in-Clion" class="headerlink" title="Debug in Clion"></a>Debug in Clion</h3><h4 id="Gen-CMakeList"><a href="#Gen-CMakeList" class="headerlink" title="Gen CMakeList"></a>Gen CMakeList</h4><p>下载 <a href="https://github.com/lizan/bazel-cmakelists" rel="external nofollow noopener noreferrer" target="_blank">bazel-cmakelists</a>，在envoy目录下运行，生成 <code>CMakeLists.txt</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bazel-cmakelists --targets //<span class="built_in">source</span>/exe:envoy-static --skip_build</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/258777260" rel="external nofollow noopener noreferrer" target="_blank">Envoy调试指南</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Debug-Compiler&quot;&gt;&lt;a href=&quot;#Debug-Compiler&quot; class=&quot;headerlink&quot; title=&quot;Debug Compiler&quot;&gt;&lt;/a&gt;Debug Compiler&lt;/h2&gt;&lt;p&gt;首先构建一个可debug的版本&lt;/p&gt;
&lt;f
      
    
    </summary>
    
      <category term="envoy" scheme="http://wiki.yanick.site/categories/envoy/"/>
    
    
  </entry>
  
  <entry>
    <title>Proxy</title>
    <link href="http://wiki.yanick.site/wiki/proxy/proxy/"/>
    <id>http://wiki.yanick.site/wiki/proxy/proxy/</id>
    <published>2021-03-04T16:09:25.000Z</published>
    <updated>2021-10-21T06:55:16.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="shadowsocks-代理"><a href="#shadowsocks-代理" class="headerlink" title="shadowsocks 代理"></a>shadowsocks 代理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s <span class="string">"-s 0.0.0.0 -p 6443 -m aes-256-cfb -k Dangerous@123"</span></span><br></pre></td></tr></table></figure><p>参考 <a href="https://github.com/mritd/dockerfile/blob/master/shadowsocks/README.md" rel="external nofollow noopener noreferrer" target="_blank">README</a></p><h2 id="Socket-5-代理"><a href="#Socket-5-代理" class="headerlink" title="Socket 5 代理"></a>Socket 5 代理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name socket5-proxy -p 80:1080 -e PROXY_USER=root  -e PROXY_PASSWORD=Dangerous@123 serjs/go-socks5-proxy</span><br></pre></td></tr></table></figure><h3 id="No-docker"><a href="#No-docker" class="headerlink" title="No docker"></a>No docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install dante-server</span><br><span class="line"> vim /etc/danted.conf</span><br></pre></td></tr></table></figure><p>更多参考 <a href="https://hub.docker.com/r/mritd/shadowsocks" rel="external nofollow noopener noreferrer" target="_blank">https://hub.docker.com/r/mritd/shadowsocks</a></p><h2 id="FRP-隧道"><a href="#FRP-隧道" class="headerlink" title="FRP 隧道"></a>FRP 隧道</h2><p>Server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart=always --network host -d -v /etc/frp/frps.ini:/etc/frp/frps.ini --name frps snowdreamtech/frps</span><br></pre></td></tr></table></figure><p>Client</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart=always --network host -d -v /etc/frp/frpc.ini:/etc/frp/frpc.ini --name frpc snowdreamtech/frpc</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;shadowsocks-代理&quot;&gt;&lt;a href=&quot;#shadowsocks-代理&quot; class=&quot;headerlink&quot; title=&quot;shadowsocks 代理&quot;&gt;&lt;/a&gt;shadowsocks 代理&lt;/h2&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="proxy" scheme="http://wiki.yanick.site/categories/proxy/"/>
    
    
  </entry>
  
  <entry>
    <title>Tips</title>
    <link href="http://wiki.yanick.site/wiki/istio/isito-tips/"/>
    <id>http://wiki.yanick.site/wiki/istio/isito-tips/</id>
    <published>2021-01-24T11:28:41.000Z</published>
    <updated>2021-10-21T06:55:16.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自定义指标前缀"><a href="#自定义指标前缀" class="headerlink" title="自定义指标前缀"></a>自定义指标前缀</h2><p>istio 没有将所有的配置项都释放出来，因此我们可以通过 <code>EnvoyFilter</code> 这个 <code>CRD</code> 进行操作</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">EnvoyFilter</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">mysql-stats-settings</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">wordpress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  configPatches:</span></span><br><span class="line"><span class="attr">  - applyTo:</span> <span class="string">NETWORK_FILTER</span></span><br><span class="line"><span class="attr">    match:</span></span><br><span class="line"><span class="attr">      context:</span> <span class="string">ANY</span></span><br><span class="line"><span class="attr">      listener:</span></span><br><span class="line"><span class="attr">        filterChain:</span></span><br><span class="line"><span class="attr">          filter:</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">envoy.filters.network.mysql_proxy</span></span><br><span class="line"><span class="attr">    patch:</span></span><br><span class="line"><span class="attr">      operation:</span> <span class="string">MERGE</span></span><br><span class="line"><span class="attr">      value:</span></span><br><span class="line"><span class="attr">        typed_config:</span></span><br><span class="line">          <span class="string">"@type"</span><span class="string">:</span> <span class="string">"type.googleapis.com/envoy.extensions.filters.network.mysql_proxy.v3.MySQLProxy"</span></span><br><span class="line"><span class="attr">          stat_prefix:</span> <span class="string">egress_mysql</span></span><br></pre></td></tr></table></figure><h2 id="Envoy-指标对外暴露"><a href="#Envoy-指标对外暴露" class="headerlink" title="Envoy 指标对外暴露"></a>Envoy 指标对外暴露</h2><p>istio 没有将所有的指标对外暴露，因此需要额外配置： <a href="https://istio.io/latest/docs/ops/configuration/telemetry/envoy-stats/" rel="external nofollow noopener noreferrer" target="_blank">envoy-stats</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl edit configmaps -n istio-system istio</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"defaultConfig"</span>: &#123;</span><br><span class="line">        <span class="attr">"discoveryAddress"</span>: <span class="string">"istiod.istio-system.svc:15012"</span>,</span><br><span class="line">        <span class="attr">"rootNamespace"</span>: <span class="string">"istio-system"</span>,</span><br><span class="line">        <span class="attr">"trustDomain"</span>: <span class="string">"cluster.local"</span>,</span><br><span class="line">        <span class="attr">"proxyStatsMatcher"</span>: &#123;</span><br><span class="line">            <span class="attr">"inclusionRegexps"</span>: [</span><br><span class="line">                <span class="string">".*mysql.*"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"inclusionPrefixes"</span>: [</span><br><span class="line">                <span class="string">"egress_mysql"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"meshId"</span>: <span class="string">"mesh1"</span>,</span><br><span class="line">        <span class="attr">"enablePrometheusMerge"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;自定义指标前缀&quot;&gt;&lt;a href=&quot;#自定义指标前缀&quot; class=&quot;headerlink&quot; title=&quot;自定义指标前缀&quot;&gt;&lt;/a&gt;自定义指标前缀&lt;/h2&gt;&lt;p&gt;istio 没有将所有的配置项都释放出来，因此我们可以通过 &lt;code&gt;EnvoyFilter&lt;/c
      
    
    </summary>
    
      <category term="isito" scheme="http://wiki.yanick.site/categories/isito/"/>
    
    
      <category term="isito" scheme="http://wiki.yanick.site/tags/isito/"/>
    
  </entry>
  
  <entry>
    <title>OS 初始化工具安装</title>
    <link href="http://wiki.yanick.site/wiki/tools/os/"/>
    <id>http://wiki.yanick.site/wiki/tools/os/</id>
    <published>2021-01-08T15:10:08.000Z</published>
    <updated>2022-02-07T07:15:18.434Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PRE"><a href="#PRE" class="headerlink" title="PRE"></a>PRE</h2><h3 id="镜像源更换"><a href="#镜像源更换" class="headerlink" title="镜像源更换"></a>镜像源更换</h3><p><a href="https://mirrors.ustc.edu.cn/repogen/" rel="external nofollow noopener noreferrer" target="_blank">USTC MIRROR 生成</a></p><hr><h2 id="ZSH"><a href="#ZSH" class="headerlink" title="ZSH"></a>ZSH</h2><h3 id="国内"><a href="#国内" class="headerlink" title="国内"></a>国内</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install -y git zsh autojump</span><br><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://gitee.com/pocmon/ohmyzsh/raw/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><h3 id="全球"><a href="#全球" class="headerlink" title="全球"></a>全球</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install -y git zsh</span><br><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><h3 id="ZSH-Theme-P10K"><a href="#ZSH-Theme-P10K" class="headerlink" title="ZSH Theme P10K"></a>ZSH Theme P10K</h3><h4 id="国内-1"><a href="#国内-1" class="headerlink" title="国内"></a>国内</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k</span><br></pre></td></tr></table></figure><h4 id="全球-1"><a href="#全球-1" class="headerlink" title="全球"></a>全球</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="variable">$&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k</span><br></pre></td></tr></table></figure><hr><p>Set ZSH_THEME=”powerlevel10k/powerlevel10k” in ~/.zshrc.</p><h5 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git -C <span class="variable">$&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k pull</span><br></pre></td></tr></table></figure><h3 id="ZSH-lazyload"><a href="#ZSH-lazyload" class="headerlink" title="ZSH lazyload"></a>ZSH lazyload</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/qoomon/zsh-lazyload <span class="variable">$ZSH_CUSTOM</span>/plugins/zsh-lazyload</span><br><span class="line">plugins+=(zsh-lazyload)</span><br></pre></td></tr></table></figure><h3 id="Iterm2-Badges"><a href="#Iterm2-Badges" class="headerlink" title="Iterm2 Badges"></a>Iterm2 Badges</h3><p><a href="https://lihsmi.ch/iterm/2020/02/07/iterm-badges.html" rel="external nofollow noopener noreferrer" target="_blank">Link</a></p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="国内-2"><a href="#国内-2" class="headerlink" title="国内"></a>国内</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><h3 id="全球-2"><a href="#全球-2" class="headerlink" title="全球"></a>全球</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com</span><br></pre></td></tr></table></figure><h3 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h3><h4 id="国内-3"><a href="#国内-3" class="headerlink" title="国内"></a>国内</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` &gt; /usr/<span class="built_in">local</span>/bin/docker-compose &amp;&amp; chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><h4 id="全球-3"><a href="#全球-3" class="headerlink" title="全球"></a>全球</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose  &amp;&amp; chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><h2 id="Kube"><a href="#Kube" class="headerlink" title="Kube"></a>Kube</h2><h3 id="国内-4"><a href="#国内-4" class="headerlink" title="国内"></a>国内</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y apt-transport-https</span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-stretch main</span><br><span class="line">EOF</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y kubectl</span><br></pre></td></tr></table></figure><h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><p>启动 <code>jenkins</code> 之后，访问 <code>${JENKINS}/pluginManager/advanced</code></p><p>替换 <code>update-center.json</code> 为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span><br></pre></td></tr></table></figure><p>进入系统的 update 目录更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/https:\/\/updates.jenkins.io\/download/https:\/\/mirrors.tuna.tsinghua.edu.cn\/jenkins/g'</span> default.json &amp;&amp; sed -i <span class="string">'s/http:\/\/www.google.com/https:\/\/www.baidu.com/g'</span> default.json</span><br></pre></td></tr></table></figure><p>重启系统<br><code>${JENKINS}/restart</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PRE&quot;&gt;&lt;a href=&quot;#PRE&quot; class=&quot;headerlink&quot; title=&quot;PRE&quot;&gt;&lt;/a&gt;PRE&lt;/h2&gt;&lt;h3 id=&quot;镜像源更换&quot;&gt;&lt;a href=&quot;#镜像源更换&quot; class=&quot;headerlink&quot; title=&quot;镜像源更换&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="os" scheme="http://wiki.yanick.site/categories/os/"/>
    
    
  </entry>
  
</feed>
